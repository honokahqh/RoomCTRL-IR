<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Target.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Target.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Dec 28 13:26:27 2023
<BR><P>
<H3>Maximum Stack Usage =        336 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; $Super$$main &rArr; System_Run &rArr; Task2_uart_process &rArr; MBS_CorePoll &rArr; MBS_CoreAnalyze &rArr; MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">DMA1_Channel1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC_COMP_IRQHandler</a> from bsp_driver.o(i.ADC_COMP_IRQHandler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from bsp_driver.o(i.EXTI4_15_IRQHandler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from xl32f0xx_it.o(i.HardFault_Handler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[14]">LPTIM1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from xl32f0xx_it.o(i.NMI_Handler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from xl32f0xx_it.o(i.PendSV_Handler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[19]">SPI1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from xl32f0xx_it.o(i.SVC_Handler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from xl32f0xx_it.o(i.SysTick_Handler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1d]">SystemInit</a> from system_xl32f0xx.o(i.SystemInit) referenced from startup_xl32f003x6.o(.text)
 <LI><a href="#[15]">TIM14_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[16]">TIM16_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[17]">TIM17_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from bsp_driver.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1a]">USART1_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1b]">USART2_IRQHandler</a> from bsp_driver.o(i.USART2_IRQHandler) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_xl32f003x6.o(.text) referenced from startup_xl32f003x6.o(RESET)
 <LI><a href="#[1e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_xl32f003x6.o(.text)
 <LI><a href="#[1c]">main</a> from system_xl32f0xx.o(i.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[34]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[82]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[83]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[84]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[21]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[85]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[86]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_xl32f003x6.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_100ms_process
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_SetBaudRate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_uart_process
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzz_mode_set
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_packet_analysis
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_timeout_process
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function01H
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_dadd</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AdcGrpRegularUnitaryConvCompleteCallback
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AdcGrpRegularUnitaryConvCompleteCallback
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AdcGrpRegularUnitaryConvCompleteCallback
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AdcGrpRegularUnitaryConvCompleteCallback
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AdcGrpRegularUnitaryConvCompleteCallback
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AdcGrpRegularUnitaryConvCompleteCallback
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>

<P><STRONG><a name="[8e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[8f]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[29]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[20]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[91]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>main</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, system_xl32f0xx.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = main &rArr; $Super$$main &rArr; System_Run &rArr; Task2_uart_process &rArr; MBS_CorePoll &rArr; MBS_CoreAnalyze &rArr; MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[10]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_driver.o(i.ADC_COMP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ADC_COMP_IRQHandler &rArr; APP_AdcGrpRegularUnitaryConvCompleteCallback &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_AdcGrpRegularUnitaryConvCompleteCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>ADC_init</STRONG> (Thumb, 298 bytes, Stack size 8 bytes, bsp_driver.o(i.ADC_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_init &rArr; LL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_SetResolution
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3f]"></a>ADC_start</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, bsp_driver.o(i.ADC_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_start
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_ADC_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_100ms_process
</UL>

<P><STRONG><a name="[36]"></a>APP_AdcGrpRegularUnitaryConvCompleteCallback</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, bsp_driver.o(i.APP_AdcGrpRegularUnitaryConvCompleteCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = APP_AdcGrpRegularUnitaryConvCompleteCallback &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>

<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, bsp_driver.o(i.EXTI4_15_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, xl32f0xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>LL_EXTI_Init</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, xl32f0xx_ll_exti.o(i.LL_EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_EXTI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableRisingTrig
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableIT
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableFallingTrig
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_EnableEvent
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_DisableIT
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_DisableEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_init
</UL>

<P><STRONG><a name="[7e]"></a>LL_GPIO_Init</STRONG> (Thumb, 250 bytes, Stack size 20 bytes, xl32f0xx_ll_gpio.o(i.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[47]"></a>LL_Init1msTick</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, xl32f0xx_ll_utils.o(i.LL_Init1msTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LL_Init1msTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[49]"></a>LL_RCC_GetSystemClocksFreq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, xl32f0xx_ll_rcc.o(i.LL_RCC_GetSystemClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LL_RCC_GetSystemClocksFreq &rArr; RCC_GetSystemClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1ClockFreq
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[68]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, xl32f0xx_ll_utils.o(i.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[7d]"></a>LL_TIM_Init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, xl32f0xx_ll_tim.o(i.LL_TIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_TIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
</UL>

<P><STRONG><a name="[4d]"></a>LL_USART_Init</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, xl32f0xx_ll_usart.o(i.LL_USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LL_USART_Init &rArr; LL_USART_SetBaudRate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_SetBaudRate
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_IsEnabled
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[7f]"></a>LL_mDelay</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, xl32f0xx_ll_utils.o(i.LL_mDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_data_process
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_data
</UL>

<P><STRONG><a name="[50]"></a>MBS_CoreAnalyze</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, modbus_core.o(i.MBS_CoreAnalyze))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MBS_CoreAnalyze &rArr; MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function10H
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function0FH
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function06H
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function05H
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function03H
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function01H
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CorePoll
</UL>

<P><STRONG><a name="[58]"></a>MBS_CorePoll</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, modbus_core.o(i.MBS_CorePoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MBS_CorePoll &rArr; MBS_CoreAnalyze &rArr; MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mb_crc16
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_uart_process
</UL>

<P><STRONG><a name="[51]"></a>MBS_Function01H</STRONG> (Thumb, 374 bytes, Stack size 96 bytes, modbus_hook.o(i.MBS_Function01H))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemReadCoilState
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendWithCRC
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[52]"></a>MBS_Function03H</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, modbus_hook.o(i.MBS_Function03H))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MBS_Function03H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemReadHoldRegValue
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendWithCRC
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[53]"></a>MBS_Function05H</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, modbus_hook.o(i.MBS_Function05H))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MBS_Function05H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemWriteCoilState
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[54]"></a>MBS_Function06H</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, modbus_hook.o(i.MBS_Function06H))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MBS_Function06H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemWriteHoldRegValue
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[55]"></a>MBS_Function0FH</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, modbus_hook.o(i.MBS_Function0FH))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MBS_Function0FH &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemWriteCoilsState
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[56]"></a>MBS_Function10H</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, modbus_hook.o(i.MBS_Function10H))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MBS_Function10H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MemWriteHoldRegValue
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[62]"></a>MBS_MappingCoilInit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modbus_user.o(i.MBS_MappingCoilInit))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MappingInit
</UL>

<P><STRONG><a name="[63]"></a>MBS_MappingHoldRegInit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modbus_user.o(i.MBS_MappingHoldRegInit))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MappingInit
</UL>

<P><STRONG><a name="[61]"></a>MBS_MappingInit</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, modbus_user.o(i.MBS_MappingInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MBS_MappingInit
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MappingHoldRegInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MappingCoilInit
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[5b]"></a>MBS_MemReadCoilState</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, modbus_user.o(i.MBS_MemReadCoilState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MBS_MemReadCoilState
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function01H
</UL>

<P><STRONG><a name="[5d]"></a>MBS_MemReadHoldRegValue</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, modbus_user.o(i.MBS_MemReadHoldRegValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MBS_MemReadHoldRegValue
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function03H
</UL>

<P><STRONG><a name="[5e]"></a>MBS_MemWriteCoilState</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, modbus_user.o(i.MBS_MemWriteCoilState))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MBS_MemWriteCoilState
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function05H
</UL>

<P><STRONG><a name="[60]"></a>MBS_MemWriteCoilsState</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, modbus_user.o(i.MBS_MemWriteCoilsState))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MBS_MemWriteCoilsState
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function0FH
</UL>

<P><STRONG><a name="[5f]"></a>MBS_MemWriteHoldRegValue</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, modbus_user.o(i.MBS_MemWriteHoldRegValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MBS_MemWriteHoldRegValue
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function10H
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function06H
</UL>

<P><STRONG><a name="[64]"></a>MBS_PhysicalSendBuff</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, modbus_core.o(i.MBS_PhysicalSendBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendWithCRC
</UL>

<P><STRONG><a name="[57]"></a>MBS_PortSendAck</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, modbus_core.o(i.MBS_PortSendAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendWithCRC
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function10H
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function0FH
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function06H
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function05H
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function03H
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function01H
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CoreAnalyze
</UL>

<P><STRONG><a name="[5c]"></a>MBS_PortSendWithCRC</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, modbus_core.o(i.MBS_PortSendWithCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mb_crc16
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PhysicalSendBuff
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function03H
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_Function01H
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendAck
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, xl32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, xl32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>RCC_GetHCLKClockFreq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, xl32f0xx_ll_rcc.o(i.RCC_GetHCLKClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[4c]"></a>RCC_GetPCLK1ClockFreq</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, xl32f0xx_ll_rcc.o(i.RCC_GetPCLK1ClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[4a]"></a>RCC_GetSystemClockFreq</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, xl32f0xx_ll_rcc.o(i.RCC_GetSystemClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_GetSystemClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSysClkSource
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, xl32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, xl32f0xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SystemClock_Config</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SystemClock_Config &rArr; LL_Init1msTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1d]"></a>SystemInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system_xl32f0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>System_Run</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app.o(i.System_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = System_Run &rArr; Task2_uart_process &rArr; MBS_CorePoll &rArr; MBS_CoreAnalyze &rArr; MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_100ms_process
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_uart_process
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task1_infrared_process
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, bsp_driver.o(i.TIM1_BRK_UP_TRG_COM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>USART2_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, bsp_driver.o(i.USART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_xl32f003x6.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[7a]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_packet_analysis
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_match
</UL>

<P><STRONG><a name="[94]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[95]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[96]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[71]"></a>buzz_mode_set</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, bsp_driver.o(i.buzz_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = buzz_mode_set
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_match
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_100ms_process
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[77]"></a>flash_page_erase</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, flash_driver.o(i.flash_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_page_erase &rArr; flash_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[79]"></a>infrared_init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, bsp_driver.o(i.infrared_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = infrared_init &rArr; LL_EXTI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[35]"></a>$Super$$main</STRONG> (Thumb, 80 bytes, Stack size 136 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = $Super$$main &rArr; System_Run &rArr; Task2_uart_process &rArr; MBS_CorePoll &rArr; MBS_CoreAnalyze &rArr; MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_data
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzz_mode_set
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Run
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_MappingInit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>mb_crc16</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, modbus_crc.o(i.mb_crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mb_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CorePoll
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PortSendWithCRC
</UL>

<P><STRONG><a name="[74]"></a>millis</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, main.o(i.millis))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_100ms_process
</UL>

<P><STRONG><a name="[73]"></a>tick_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.tick_printf))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_packet_analysis
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_match
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_100ms_process
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>

<P><STRONG><a name="[7c]"></a>timer1_init</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, bsp_driver.o(i.timer1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = timer1_init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[7b]"></a>uart2_init</STRONG> (Thumb, 212 bytes, Stack size 64 bytes, bsp_driver.o(i.uart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = uart2_init &rArr; LL_USART_Init &rArr; LL_USART_SetBaudRate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[65]"></a>uart_send_data</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bsp_driver.o(i.uart_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_timeout_process
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_data_process
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_100ms_process
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_PhysicalSendBuff
</UL>

<P><STRONG><a name="[80]"></a>ymodem_packet_analysis</STRONG> (Thumb, 608 bytes, Stack size 24 bytes, ymodem.o(i.ymodem_packet_analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ymodem_packet_analysis &rArr; YmodemCRC &rArr; UpdateCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YmodemCRC
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tick_printf
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_data_process
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[70]"></a>NVIC_SystemReset</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_timeout_process
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_100ms_process
</UL>

<P><STRONG><a name="[6a]"></a>Task1_infrared_process</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app.o(i.Task1_infrared_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Task1_infrared_process &rArr; infrared_match &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_match
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Run
</UL>

<P><STRONG><a name="[6b]"></a>Task2_uart_process</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, app.o(i.Task2_uart_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Task2_uart_process &rArr; MBS_CorePoll &rArr; MBS_CoreAnalyze &rArr; MBS_Function01H &rArr; MBS_PortSendAck &rArr; MBS_PortSendWithCRC &rArr; MBS_PhysicalSendBuff &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MBS_CorePoll
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_data_process
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Run
</UL>

<P><STRONG><a name="[6c]"></a>Task3_100ms_process</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, app.o(i.Task3_100ms_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Task3_100ms_process &rArr; ymodem_timeout_process &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_start
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_timeout_process
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_data
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzz_mode_set
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tick_printf
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Run
</UL>

<P><STRONG><a name="[6d]"></a>infrared_match</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, app.o(i.infrared_match))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = infrared_match &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buzz_mode_set
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tick_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task1_infrared_process
</UL>

<P><STRONG><a name="[6e]"></a>ymodem_data_process</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app.o(i.ymodem_data_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ymodem_data_process &rArr; ymodem_packet_analysis &rArr; YmodemCRC &rArr; UpdateCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_packet_analysis
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task2_uart_process
</UL>

<P><STRONG><a name="[72]"></a>ymodem_timeout_process</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, app.o(i.ymodem_timeout_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ymodem_timeout_process &rArr; uart_send_data &rArr; LL_mDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_data
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task3_100ms_process
</UL>

<P><STRONG><a name="[76]"></a>UpdateCRC16</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ymodem.o(i.UpdateCRC16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UpdateCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YmodemCRC
</UL>

<P><STRONG><a name="[75]"></a>YmodemCRC</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, ymodem.o(i.YmodemCRC))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = YmodemCRC &rArr; UpdateCRC16
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateCRC16
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ymodem_packet_analysis
</UL>

<P><STRONG><a name="[41]"></a>LL_EXTI_DisableEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, xl32f0xx_ll_exti.o(i.LL_EXTI_DisableEvent))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[43]"></a>LL_EXTI_DisableIT</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, xl32f0xx_ll_exti.o(i.LL_EXTI_DisableIT))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[44]"></a>LL_EXTI_EnableEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, xl32f0xx_ll_exti.o(i.LL_EXTI_EnableEvent))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[46]"></a>LL_EXTI_EnableFallingTrig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, xl32f0xx_ll_exti.o(i.LL_EXTI_EnableFallingTrig))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[42]"></a>LL_EXTI_EnableIT</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, xl32f0xx_ll_exti.o(i.LL_EXTI_EnableIT))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[45]"></a>LL_EXTI_EnableRisingTrig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, xl32f0xx_ll_exti.o(i.LL_EXTI_EnableRisingTrig))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
</UL>

<P><STRONG><a name="[66]"></a>LL_RCC_GetSysClkSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, xl32f0xx_ll_rcc.o(i.LL_RCC_GetSysClkSource))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[4e]"></a>LL_USART_IsEnabled</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, xl32f0xx_ll_usart.o(i.LL_USART_IsEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[4f]"></a>LL_USART_SetBaudRate</STRONG> (Thumb, 306 bytes, Stack size 48 bytes, xl32f0xx_ll_usart.o(i.LL_USART_SetBaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LL_USART_SetBaudRate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[3b]"></a>LL_ADC_IsEnabled</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bsp_driver.o(i.LL_ADC_IsEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_start
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[3c]"></a>LL_ADC_SetResolution</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bsp_driver.o(i.LL_ADC_SetResolution))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[3a]"></a>LL_APB1_GRP2_EnableClock</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_driver.o(i.LL_APB1_GRP2_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_APB1_GRP2_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[39]"></a>LL_GPIO_SetPinMode</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, bsp_driver.o(i.LL_GPIO_SetPinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[38]"></a>LL_IOP_GRP1_EnableClock</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_driver.o(i.LL_IOP_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[3e]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bsp_driver.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[3d]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bsp_driver.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infrared_init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[78]"></a>flash_unlock</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, flash_driver.o(i.flash_unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_unlock
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tick_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[22]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
